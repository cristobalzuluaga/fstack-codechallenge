name: deploy app

on:
  push:
    branches:
    - dev
    - stage
    - prod
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: us-east-1
  TF_VAR_env: ${{ github.ref_name }}

jobs:
  deploy-infra:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.1.7"

    - name: terraform init
      run: terraform -chdir=terraform/ init -backend-config="key=$TF_VAR_env/terraform.tfstate"

    - name: terraform apply
      run: terraform -chdir=terraform/ apply -auto-approve

    - name: terraform output
      run: terraform -chdir=terraform/ output -json > tfout.json

    - uses: actions/upload-artifact@v4
      with:
        name: infra-outputs
        path: tfout.json 

    deploy-app:
      runs-on: ubuntu-latest

      steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: infra-outputs

      - uses: actions/setup-node@v4
        with:
          node-version: 15
      - name: install dependencies
        run: npm install
      - name: build front
        run: npm run build

      - name: deploy to S3
        run: |
          bucket_name=$(cat tfout.json | jq -r .bucket_name.value)
          aws s3 sync ./public/ s3://${bucket_name}/ --delete --quiet

      - name: cache invalidation
        run: |
          cf_dist=$(cat tfout.json | jq -r .cf_dist.value)
          aws cloudfront create-invalidation --distribution-id ${cf_dist} --paths "/*"
